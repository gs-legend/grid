import { Shape } from "./shape";
import { Path2D } from "../path2D";
import { BBox } from "../bbox";
export declare class Sector extends Shape {
    static className: string;
    protected path: Path2D;
    private _dirtyPath;
    set dirtyPath(value: boolean);
    get dirtyPath(): boolean;
    private _centerX;
    set centerX(value: number);
    get centerX(): number;
    private _centerY;
    set centerY(value: number);
    get centerY(): number;
    private _centerOffset;
    set centerOffset(value: number);
    get centerOffset(): number;
    private _innerRadius;
    set innerRadius(value: number);
    get innerRadius(): number;
    private _outerRadius;
    set outerRadius(value: number);
    get outerRadius(): number;
    private _startAngle;
    set startAngle(value: number);
    get startAngle(): number;
    private _endAngle;
    set endAngle(value: number);
    get endAngle(): number;
    private _angleOffset;
    set angleOffset(value: number);
    get angleOffset(): number;
    computeBBox(): BBox;
    isPointInPath(x: number, y: number): boolean;
    isPointInStroke(x: number, y: number): boolean;
    private get fullPie();
    updatePath(): void;
    render(ctx: CanvasRenderingContext2D): void;
}
